import React, { useEffect, useRef, useState } from 'react'

const Demo = () => {

  const videoRef = useRef(null)
  const [streaming, setStreaming] = useState(false)

  useEffect(() => {
    const  enableCamera = async () => {
      const stream = await navigator.mediaDevices.getUserMedia({video: true})
      videoRef.current.srcObject = stream
      setStreaming(true)
    }

    if(!streaming) enableCamera()

    if(videoRef.current.srcObject){ const tracks = videoRef.current.srcObject.getTracks()
      console.log(tracks)}
   

    return () => {
      if(streaming){
        const tracks = videoRef.current.srcObject.getTracks()
        console.log(tracks)
      }
    }
  
  }, [streaming])

  const captureFrame = () => {
    const canvas = document.createElement('canvas')
    canvas.width = videoRef.current.videoWidth
    canvas.height = videoRef.current.videoHeight
    canvas.getContext('2d').drawImage(videoRef.current, 0,0)

    
  }
  
  return (
    
    <div>
      <video ref={videoRef} autoPlay></video>
    </div>
  )
}

export default Demo